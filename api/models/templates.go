// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x3c\x6b\x73\xdb\x46\x92\xdf\xf3\x2b\xa6\x50\xb9\xa2\x1c\x53\x90\xec\xec\xed\xed\x31\xe7\xad\x92\x29\xda\x56\xa2\x07\x8f\xa4\xbd\x75\xb1\x55\x29\x08\x18\x8a\x88\x48\x80\xc1\x43\x8f\x28\xfc\xef\xd7\x3d\x33\x00\xe6\x49\x40\xaf\x3b\xee\xc6\x22\x31\x3d\x3d\x3d\x3d\x3d\xfd\x9a\xc6\xdc\xdf\x93\x88\xce\xe3\x84\x12\x2f\x58\xaf\x3d\xb2\xd9\x7c\x47\x08\x3c\xfc\x1e\x7e\x91\xc1\x3b\xe2\x1f\xc0\xdf\xfa\xe1\x2a\x48\xe2\x39\xcd\x0b\xd6\x72\x52\xfd\xe0\xcd\xf0\x1f\x21\xde\xc1\xbf\xa6\x33\xba\x5a\x2f\x83\x82\x7e\x48\xb3\x55\x50\x7c\xa1\x59\x1e\xa7\x89\x47\x06\xc4\x7b\xbb\xff\x66\x7f\x77\xff\x3f\xe1\xff\x5e\x9f\x83\x0f\xd3\x24\x8a\x0b\x68\xcf\xbd\x81\x40\xc1\x46\x2a\x04\x0e\xe2\x5d\x04\xcb\x20\x09\x69\xb6\x1b\x36\xa0\xfa\xd8\x46\xa7\x75\x96\x86\x34\xcf\x1f\xd4\x27\xa3\x97\x71\x5e\x64\x77\x6d\x9d\xbc\xa3\xa4\xa0\x59\x12\x2c\x91\x62\xe2\x7d\x48\x06\x83\xd1\x1f\x65\xb0\xc4\x19\x7c\xc5\x27\x13\x3a\x87\xaf\x0d\x18\xd9\xf4\x89\xf7\x3f\x14\xb0\x9d\xc3\xd7\x0a\xcb\x38\x8b\xaf\x61\xdc\x16\x24\x15\x94\x1d\xc7\x7b\x60\xcd\xd5\x94\x86\x65\x16\x17\x77\x1f\xb3\xb4\x5c\x23\x9b\xef\x65\x74\xf0\xfb\xeb\x3d\xc3\x86\x0b\xa0\xc2\x22\x4e\xef\x9c\xcf\x4b\x20\xf5\xc6\x41\x16\xac\x28\x50\xce\xba\x6e\x5f\x91\x35\xc2\x3e\x60\x35\xac\xf0\xd5\x5c\x86\xcb\x32\x87\x61\x25\x31\x80\x87\xb3\xbb\x35\xe5\x84\x17\x59\x9c\x5c\x7a\xfd\xa6\xe9\x90\xce\x83\x72\x59\xb0\x56\xf5\x79\x1e\x66\xf1\xba\xa8\x64\xce\x13\x4d\x0d\xd7\x0e\xe9\x7a\x99\xde\xad\x68\x52\x9c\x04\xb7\xf1\xaa\x5c\x59\xc6\x84\x8e\xa7\xe5\xea\x02\xe8\xb1\x0c\xc9\x24\x79\xdf\x35\x28\xb4\x0a\xbc\x64\x4d\xb3\x10\x86\x09\x2e\x29\x49\xe7\x44\xb0\x81\xe6\xa4\x48\xc9\x15\xa5\x6b\x92\x95\x49\x02\xd3\x22\x37\x8b\x78\x49\x61\x1f\x22\x5d\x38\xcd\x6d\x24\xc7\xc9\x23\x49\x7e\xb3\x9d\x64\x8e\xf7\xf9\x48\x1e\x25\xd7\x71\x96\x26\x48\xb3\x9d\x58\xf7\x92\x6e\x59\x51\xeb\x82\xca\x1b\xb2\xdb\x38\x0a\xc2\xb3\x64\x79\x47\x82\xe5\x32\xbd\x21\x41\x88\xd3\xc5\xc9\x16\x8b\x38\x27\xa8\x03\xe7\x59\xba\x22\x71\x92\xc7\x11\x85\x87\x94\x7c\x19\x0f\x1d\x34\x9f\xa6\x72\xc3\x01\x22\xa4\xd1\x97\x60\x59\x52\xbe\xab\xd9\xfe\xed\x33\x38\x72\x6e\x4c\xe2\x17\x7a\xf7\xd2\x7c\x92\x54\xce\x23\xd8\xf4\x39\xa7\x64\x5a\x5e\x24\xb4\xc8\x05\x22\xe4\x53\xbe\xa6\x61\x3c\xbf\x43\xb6\xec\x32\x1e\x2d\xd3\x20\x22\x95\x8a\x20\x34\x89\xd6\x69\x9c\x14\xf9\x8b\xf0\x6c\x42\x97\x34\xc8\x6d\x13\x7a\x6e\x9d\x31\xa1\xeb\x34\x8f\x8b\x34\xb3\x2d\xd2\xd3\x06\x9b\xa6\x25\x6c\x39\x12\xa6\xc0\xbc\xac\x19\xc6\x20\x41\xd5\xdd\xcf\x4d\xc5\x0c\x44\xfb\x58\x59\xba\x5c\x8c\x47\x2e\x71\x40\x32\x4f\xb3\x7a\x53\x58\x88\xe3\x82\xe1\x20\xeb\x18\x0c\xeb\x7f\x81\x67\x00\x56\x69\xf8\x76\x30\xe0\xc0\x83\xc1\x51\xf4\xcf\xc7\x90\x0a\xa2\x46\x72\x3e\x5e\x37\xaa\xdc\x72\xff\x32\xc4\xad\xc5\xf6\xe8\x46\x64\xe5\x20\x29\xd4\x69\x7b\x6f\x67\x32\xfa\xef\xcf\x47\x93\xd1\xe1\x2b\x72\x1c\xac\x2e\xa2\x80\x0c\xc1\x5a\xa6\xab\x59\xba\x8e\x43\xf2\x29\x48\xa2\x25\xac\x98\xd8\x0e\xa4\xc2\x28\x91\x09\xea\xfd\x98\x26\x97\xc5\x82\x11\xf9\x46\x6e\xd2\x14\x80\x49\x1f\x28\x3c\x3b\xe7\x1a\xa6\x01\x0c\x72\xec\xb1\x0c\x6b\x61\xd0\x78\x38\x3c\x3a\x9c\x3c\xbb\xc8\xe3\xc8\x88\xd8\x3e\xbc\xe2\x15\x9d\x40\x0b\x8c\x22\xcb\xb7\x37\x4e\xb3\x62\x9c\xa5\x45\x1a\xa6\x9a\xe5\x59\x14\xc5\x9a\xfb\x75\x28\x5b\x34\xa1\x99\x04\xe7\x7d\x9a\xcd\xc6\xa8\xd2\x8e\x92\xbc\xc0\x9d\x66\x6b\x63\x7b\x9d\xba\x20\xa6\x5e\xc3\x1d\x31\x5c\xbe\x7d\xbc\xe9\x93\x07\x54\x46\x2c\xc2\x2d\xf3\x9b\x0d\x9d\xd3\x13\x4d\xee\xc1\xa6\xd3\x63\x7d\xa8\xe5\x96\xa9\x21\xf8\xd3\x86\x22\x1b\xeb\x7a\x4f\x68\xce\xb4\xb2\xb2\xe0\xd2\x96\x9b\xa4\x4b\x87\x19\x65\x7b\xe2\xe8\xe0\x64\x30\x60\x30\xd2\x4c\x60\x70\x70\xae\x8a\x98\xaa\x5a\x12\xcd\x5e\x9e\x97\x2b\x8a\xf0\xe3\x74\x19\x87\x77\x87\x69\x58\x1a\x7e\x13\xdf\x0a\xb5\xae\xc0\x58\xea\xed\x2e\x84\x53\x6f\xfe\x43\x1a\x84\x01\x4d\x0b\x50\x3e\xa2\xff\x57\xa5\x89\x68\xf8\x18\xf8\x68\x3e\xa7\x21\x33\xc6\xcc\xfc\x6a\xd8\x04\xe9\x71\x12\xc6\xeb\x2a\xe4\x99\xd2\xec\x3a\x0e\x29\x37\xd0\x4b\xa6\x8f\xfc\x60\x15\xfc\x99\x26\xc1\x4d\xee\x87\xe9\x4a\x89\x52\xe4\x89\x86\x42\xa1\x41\xbf\xbc\xc8\x07\xcd\xc4\x1b\xeb\x5e\x7d\x36\xca\x6f\xb9\x55\xc1\x0c\x01\x0b\x28\x35\x20\x7e\xcf\x53\x1f\x23\x27\x39\xaf\x55\x1e\xe8\x1c\xe0\x90\x77\xa7\x10\xf5\x30\x1e\x44\x2b\xf0\x84\x21\x0e\x0c\xc0\x0a\x1b\xbc\xf0\x5a\x16\x88\xc1\x74\x59\x24\x06\xa8\x2c\x14\x32\xd6\x58\x0a\x89\x65\xde\x0f\xf8\xb3\x12\x4c\xfe\x80\x6c\x5a\xd8\x26\xff\x6a\x20\x37\x86\x8a\x95\x44\x7b\x8b\x58\x73\xd3\x33\x18\x7c\x28\x13\x4e\x55\x27\xe9\x1e\x82\x63\x63\x4a\xf2\xf4\xc7\xf7\x65\x78\x45\x8b\x26\xfe\xfd\x19\xfc\x44\x2e\x1a\xbb\x30\x53\xf8\x03\x71\xf8\x75\x7a\x0b\xdf\x9b\x70\x98\x91\x31\x81\x40\x1d\x55\x38\x4c\xde\x94\x33\x40\x2c\x3c\x69\x1d\x2b\x47\x9a\x71\x1b\xb9\xa7\xa0\xad\x73\x14\x18\x11\xef\x71\x89\xde\x9b\xb3\xf4\x05\x3c\xf6\xff\x8c\xd7\x1e\x1f\xcb\x29\x85\xc2\x04\x23\xb2\x38\x89\xe8\xad\x4f\x6f\x45\x4c\xa2\x80\x9d\xd0\x15\xf8\x76\xd3\xf8\x4f\xc6\xd4\x37\x6f\xff\xa1\x36\x57\x6a\x85\x93\xfe\x91\x16\x07\x05\x97\x0d\x43\xf7\xa0\x64\x64\x89\xb1\xcf\xbc\x49\x99\x14\x31\x97\xe4\x04\xf8\xfe\x7b\xae\x0e\x30\x83\xb6\xb4\x64\x12\xf6\xe3\xbe\xe7\x16\x08\x7b\xbc\x9f\xd5\x5a\x91\xf8\x8e\x50\x3f\x84\x90\xef\xf7\xf4\xa2\x0b\x68\x95\x15\x90\x41\x3b\x26\x12\x72\xae\x80\xb6\x20\xaf\x93\x39\x2e\xec\xb6\x4e\x95\xc7\xeb\x39\x90\xe6\x05\x4f\xc5\xa8\xb6\xe2\xac\x2c\xd6\x65\xd1\x9e\xbf\x4a\x05\x1c\xf1\xb7\x4f\xae\x81\xeb\x9a\xb0\xb2\xf7\x68\xe2\x86\xa2\xd0\x7c\x17\x54\x52\x18\x63\x71\x59\x13\x9b\xa0\x86\xd3\x6d\xe2\x77\xf8\x1f\x8c\x0c\xb1\x1c\xc3\x2b\xa5\x0c\x6d\x79\xb6\x2a\x59\x98\x05\xc9\x25\x25\xdf\x5f\xb1\x5c\xe1\x28\x01\x42\x51\xc7\xe6\xd5\x64\x78\xf2\x0a\xe0\xca\x35\x28\x0e\x84\xdb\x6c\x1a\xc3\x62\xe6\xc4\x70\xff\x7a\x92\xc0\x7b\xa3\x24\xb8\x58\xd2\x48\xc5\xd0\x74\x3d\x4d\xd9\xd6\xb1\x26\xd7\xf0\xc9\x14\x14\x41\xc8\x77\xd7\xbe\xac\x0b\x54\x7c\x1f\x2a\x25\xc0\xd5\x0d\xea\x87\xdd\x37\x8c\x0a\x41\x48\xc3\x97\xed\x1c\xaa\x72\x5f\x1a\x77\xa8\x8b\x3b\x0d\x19\x54\x21\x43\xf2\x47\x2a\xdd\x3c\x4c\x57\xab\xe0\x90\x2e\xe3\x55\x5c\xd0\x08\xfd\x24\x4f\x4a\x1c\x35\xf9\x9f\xfe\x7e\xff\xed\xbf\xff\x5d\x6e\x53\x62\x0c\x9e\x3c\x32\xb2\x3e\x59\x99\xf4\xc9\x70\xfc\x99\x94\x49\x5c\xf0\x27\x14\xf7\x1f\xed\x13\xd0\x79\xe4\xe4\x3d\xf6\x98\x1c\x9c\x48\x2d\x5e\xb3\x3f\xba\xb2\xa7\x16\x61\x36\x7f\xef\x38\xbd\x54\xc3\x5c\x8b\xbc\xd6\x30\x5c\x42\xfb\x2d\x23\x48\x8a\xc0\x35\x86\x6a\xec\xd2\xcb\x9c\xfd\xcb\x81\xba\x0c\xd1\xa8\xa5\x4e\x09\x73\x47\x92\x3d\x9e\x37\xdd\xfc\x4f\x01\x44\xaf\xd5\x6a\x08\xd9\xd0\xa4\xa7\x01\x16\xdb\x27\x97\x72\xd5\x92\x18\xf9\x28\x60\xd0\x34\x1a\x4e\x67\x41\x7e\x75\x88\xc4\xc7\x85\x25\xf2\x5c\xc3\x14\xf3\x33\x66\x35\x15\xc7\xa0\x5f\x7b\x7e\xcc\x04\x9d\x5b\x62\x48\x0e\x8e\x41\xa1\x3e\x86\x04\x2c\xf9\x47\x6f\xfc\xfd\x6e\x4e\x84\x18\x78\x96\x5e\xd1\xa4\xd5\x42\x3a\xad\xa3\x70\xf2\x1c\x0e\x87\xe6\x66\x80\x77\x16\x5e\xb1\x1e\x6c\xdb\xe3\x72\xd5\x3c\xf4\x4c\xd7\x43\x4e\x46\xd5\x88\xaa\x67\x1a\xa8\x96\x1b\xad\xc1\xe5\xe7\x5a\x97\xda\xa9\x11\xa0\xf8\x5b\x03\x41\x8e\x73\x15\xa7\x3a\xbc\x7c\xb6\x47\x73\x3e\x57\x4d\xed\xd6\x53\xaa\x74\xaf\xee\xa7\x5a\x1c\xdc\xca\x57\x56\x59\x62\x71\x70\x8f\x56\xc1\xa5\x04\xc9\x7e\xda\x41\xef\xef\x51\xec\xa9\xcf\x74\x59\x12\xf9\x07\x59\x16\xdc\x6d\x36\x06\x1c\x11\xea\x2e\x89\x2c\xc1\x4d\x85\xaa\xda\x1e\xcc\x13\xeb\x03\xda\x25\xf3\xb2\xd9\x66\xe9\x32\x84\x4c\x12\xc3\xb1\xd9\xf4\xef\xef\xe9\x32\xa7\x9b\x0d\xfc\x4d\xa2\x2d\xbd\x60\xaa\xd5\x78\x30\x51\x07\x81\x2e\x14\xe7\x36\xc6\xe0\xb8\xa8\x14\x12\x2a\x53\xcf\xd3\x1e\x60\x11\xdb\x98\x04\xec\xb8\x46\xdd\x69\xe9\xbc\xb1\xc4\x68\x2e\xe2\xbc\xe1\xba\x6c\xb6\x8e\x64\x3c\xdf\xd8\x8d\x67\x2d\x17\x86\x05\x35\x51\x73\xaf\xd8\x8a\xfd\xed\xd3\xb1\xbb\x0e\x22\x24\x90\x83\xf1\xb8\x92\x52\x54\xc5\x5b\x44\x1a\xf7\xf9\xc1\xf0\x17\x01\x4d\x93\x6b\xf1\xdb\x09\x0d\xaa\xe4\xb7\xc9\xe8\xe3\xd1\xd9\xa9\xdc\x47\x7a\xea\xea\x29\x79\x50\xf4\x0e\x84\x98\x2f\x22\x17\x61\x69\x4a\xc4\xba\xfe\x4c\x76\x51\x60\x78\x2f\xcf\xb3\x83\x11\x6e\x21\x70\x04\xe1\x3b\xd5\xc2\xc2\xff\xd8\x24\x64\x9b\x00\x37\xf6\xf1\x01\x13\xf2\x8f\xe3\xe4\xea\x4b\x90\xe5\x2e\x22\x0d\x1a\x5b\xa8\x73\xd3\xe0\x1d\x9f\x7d\xfc\xed\xe3\xe4\xec\xf3\xd8\xe5\x4a\x58\x17\x71\x3c\x39\x1b\x8e\xa6\x53\x53\xe7\x19\xc0\x36\x01\xfc\x92\x2e\xcb\x95\x25\x13\xa1\xb3\x85\xfa\x27\x29\x84\x6f\xe8\xd5\x8a\x2e\x2e\x86\x70\x2f\x81\xfe\x41\xfc\x4f\x29\xb8\x13\xde\xde\x75\x90\xed\x81\xa3\xb6\x17\xa5\x10\x53\x67\x7e\x0e\x7f\xdc\x4b\x8e\x93\x60\x1d\x37\x9b\x01\x7c\x1b\xa6\x30\x26\xf8\x31\x99\x43\x10\x39\x47\x51\x09\x39\x11\x3a\x62\xed\xbd\x6b\x3e\x8d\x3d\x33\x86\xd7\x8c\xeb\x1e\x6a\x4d\xc6\x55\xd4\xb0\x0e\xe2\x6c\xe1\xbe\x4c\xe2\x16\xc1\x73\xb7\x91\xfa\x6c\x9c\xd1\x75\x9a\x72\x47\x93\x98\xc0\x16\xe5\xec\x8d\x6e\x8b\x2c\x40\x6a\xdb\x57\xd7\xb2\x8b\xeb\xce\x27\xc1\xda\xb9\xd4\xae\x35\xc4\x8e\xb2\x21\x16\xfb\xc3\xce\x1e\xb4\xc5\xeb\x83\x28\x02\x27\x38\xaf\x3a\x54\x7b\xc8\x6e\xa4\x1e\xbc\xb5\x9e\xc8\xc9\xca\x77\x75\xf1\xf1\x69\xd8\x31\x57\x2f\xe5\xf0\xb7\xae\x94\x8f\xc0\xee\xad\xa7\x8b\xfa\x00\x65\xdd\xbd\x2f\xdc\xa6\x0b\x87\x81\xc7\xfe\xfb\xea\xc0\x6d\xb3\xc1\x35\x75\xe8\x20\x36\x0d\x04\xaf\x77\x84\x73\xe9\x9c\xdb\xe4\x05\x97\x0f\x8f\xd8\xe2\x25\xbd\xa4\x51\xa3\x24\x9b\x67\x16\x52\x0d\x02\xdd\x04\x68\x39\xce\xae\x39\x4d\x7b\xe8\x23\xa5\x18\x9a\xb8\xa3\xae\x42\xe2\x4e\xb8\x96\x57\xb0\xb9\xb8\x6a\x98\xf4\x9d\xc2\x63\xee\xc9\x42\xe4\x26\xad\xac\x32\x03\x4f\x8e\x0c\xeb\xf5\xaf\x52\xbb\x6c\x30\x87\x5f\x6d\x5b\x41\x35\xf2\xb1\x04\x4d\x2c\x5a\x6b\x9e\xb7\xc4\x6d\x66\x1c\xf0\xff\x18\xb0\x49\x45\x41\xf5\x56\xaa\x9e\x69\xa0\x87\x34\x8f\x33\x1a\x0d\xd1\x84\x5a\x5d\x49\x47\x96\xa7\x93\x2b\xf9\xb2\x91\xa3\x19\x8e\x6f\xa3\xd3\x8c\xad\xf5\x40\xb4\xce\x22\xd7\x99\xbd\x46\x0e\x0c\xae\x69\x85\x45\x63\x5e\xff\xd3\xec\x62\x03\x42\x97\x49\xb3\x9e\x6a\x1b\x0e\x51\x19\xa5\xe3\xc0\xd2\x83\x6a\x23\x58\xce\x6c\x24\x1f\xc9\xa1\x9d\x8d\x95\xf9\xeb\x2f\x6d\x69\x1e\xb4\xe9\x2c\x0b\xd7\xb7\xe8\x5f\x9b\xae\xb5\x6b\x59\x4d\x44\xac\xea\xd5\xa9\xcd\x64\x94\x6d\x19\x35\x6b\xbd\xa4\x9a\x75\xac\x67\x2f\xa7\x94\xbe\x17\x59\x2c\x36\x5d\x70\x50\xb8\xd8\xf9\x63\xe9\xa9\x04\x5c\x8d\x32\xce\x60\xd8\x5b\x84\x5f\x43\x48\x59\xcc\x89\x57\xe1\xfe\x37\x18\x56\xc1\xa9\x67\xaf\x7c\xd9\x28\x4b\x29\xab\x2a\x41\xa1\x8f\x61\xb5\x98\x43\xd4\x3e\xf3\x38\x34\xca\x3b\x9c\x15\x95\xfa\x54\x5b\xd1\x32\x51\x30\xaa\x8f\x1e\xb5\x24\xf6\x24\xb0\x7d\x39\xea\x3a\x1c\x8c\x90\x3a\x33\xaf\xd1\x17\x55\x7f\x6d\x05\x1f\xc2\xc3\x17\xa9\xa4\x7a\x0c\x85\xcc\x2f\x7a\x0c\x69\x68\x8d\x31\x81\x23\x0d\x36\x09\x92\x28\x5d\xe5\x64\x27\x2e\xd2\xa0\x19\xe5\x95\x61\xdf\xb7\x4e\xe4\x51\xcb\xaf\x26\xb9\x5d\xf9\x5f\xb1\xc0\x27\xba\xaa\x6a\x97\x8e\x7a\xef\xd5\x3c\xd6\x58\xab\xf1\x71\xbb\xdf\xa3\xf5\x6d\xce\x0d\xa4\x54\xbc\x6e\xd3\x71\xdd\x14\x95\xca\xf5\xe6\xe1\xe9\x94\x9b\xc3\x73\xb5\xce\xe2\x45\xc4\xb9\xfa\xfa\x10\x17\xcf\x81\x5d\x71\x82\xc4\xac\x3d\x6d\xb8\xe7\x91\xf0\xea\x6b\xe5\x67\xbc\x00\xe1\xb2\xd8\xf8\xb2\xbd\x65\x7d\x8a\x0c\xb3\x3e\x41\x93\xfc\x7a\x06\x79\xd7\x8f\x5c\x5e\x40\xe2\x2d\x02\xe7\xaa\x93\x7c\x22\x27\xd5\xd3\x21\x5e\x2a\xa8\x8c\x24\x95\xd9\x5a\x9d\x62\x8f\x81\xa9\x87\x6e\x86\xd7\x42\x3a\xf8\x93\xbb\x15\xa9\x86\xfb\xa1\xd6\x88\x1e\x25\x97\x22\xde\xd7\x02\x94\xad\x7b\x4e\x40\xe9\xee\x15\x0b\x6b\x30\x65\xc1\xaa\x1a\x4c\xff\xcb\x1b\xc6\x51\x76\x84\xfc\xf6\xf6\x7d\xf6\xbf\xbd\x7d\xf3\x2c\xc1\x95\x48\x6a\x7a\x4b\x45\x19\xa2\xec\xcf\x12\x2a\x3a\xe2\x58\xef\x68\x2d\x57\x78\x61\x95\x9a\x51\xc0\xf3\x21\x4b\x57\x38\x71\xdb\x4e\x36\x80\x67\xa9\x0b\x54\x8d\x48\xdb\x42\xb4\x76\xe7\x4f\x0e\xca\xbe\xac\xc3\xa3\x48\x67\x85\x71\x2a\xdf\x77\x6e\x00\xdb\x19\x31\x17\xda\x65\x90\x17\x71\xd8\xec\x7d\x58\x79\x3c\xe2\x6c\x54\x41\x23\xc4\x8f\x33\x0d\x4a\x54\xdc\x61\x77\x36\xf3\x76\xed\x9a\x26\xd5\x39\x0d\x17\x14\x50\x78\x71\xf3\x5e\x8d\x12\x06\xf3\x76\x6f\x20\x41\xa8\xd1\x70\x53\xa2\xac\x9e\x88\x55\xe5\xc1\x7d\x87\xc3\xae\x55\x11\x1b\xfe\xbe\x0e\xa8\x39\xf5\x32\xbc\x75\x03\x34\x94\x6b\x84\xd5\xef\x35\xf4\xe5\x39\xb9\xa5\xc9\x08\x2c\x9d\x53\x3e\xb2\x61\x33\xe7\x69\x9d\x9b\x39\x23\x55\xdc\x51\x74\x12\xca\x0a\xc4\x0e\x33\x88\x94\x40\xc8\x78\xd5\x1c\x27\x43\xc8\x12\xfc\x40\x93\xd3\x97\x6b\x92\xfe\xbe\xaf\x28\xb3\x06\x8f\x5c\xc2\x02\xc4\x47\x4b\x2a\x15\x32\xa1\x90\x49\x8f\x44\xf4\x26\xa1\xc9\xd2\x3c\xff\x35\x4d\x68\x35\x64\xd3\xf4\x89\x06\xcb\x62\x31\x5c\xd0\xf0\x4a\xcf\x5f\xf0\xa6\xbb\xd9\x02\x54\xe8\x22\x5d\xb2\xb4\xd6\x5b\x55\xa0\x18\x13\xaf\x59\x51\x24\x23\x82\x77\xa9\x9e\x1a\x21\xee\x2c\xc8\x2e\xed\xf5\x6e\x46\x06\x51\x42\x57\x29\x34\x40\x37\x70\x4a\xa8\x6b\x63\x56\x8e\x86\x40\x05\xbf\x5c\x49\x46\x79\xc4\xa0\x58\x68\x2a\xce\x92\xb2\x50\xf9\xcf\x7b\x4a\x2b\xa0\x00\x7f\x4e\x16\x56\x6e\x36\xe1\xae\xb4\x26\x55\x9d\xef\x73\xda\x2d\xc5\xb8\x73\x76\xfa\xb6\x34\xa8\x27\x9b\x0f\xd5\x5f\xd2\xaa\x8f\x59\xff\xee\xf6\x4d\x45\x6d\x3b\x91\x37\x5c\xf7\x47\x06\x70\xfd\xa6\xf4\x19\x0b\x9c\x2d\x99\x60\xa7\xf5\x94\x0d\x41\x67\x13\x69\x2b\xad\x56\x38\xa7\x03\xd8\x39\xd7\xe0\xe1\x03\xdb\x32\x60\x0f\x8c\x17\xcd\x99\x23\x4b\x24\x5e\x55\x46\xf6\xe5\xd6\xc2\x90\x02\xa7\xea\xde\x06\xfa\x54\x32\x8c\x14\xfe\xb9\x5e\x25\xfc\xbc\xfe\x8b\xa3\xf4\xba\xe3\x06\x36\x37\xec\xed\xdd\xb6\x5d\x6b\xa9\x4f\x51\x2b\xba\xb9\xc1\x51\xf0\x58\x6b\xdc\x59\xa7\xca\x5f\x52\xc0\xa5\x26\x5b\x51\x7b\x51\x64\xf1\x45\x59\xf0\x09\xdb\xcf\xeb\xea\x92\x99\x36\x32\x18\x70\x1d\x6a\xa2\xb9\xb2\x9c\x31\xdb\x0e\x60\xe4\xfd\xc3\x09\x79\x8e\x1d\x64\x54\x97\xb7\xa7\x3a\x9f\x2e\x3f\xc7\xef\x87\x69\x7a\x15\xd3\x29\xf8\xaa\x57\x10\x51\xe6\x79\xed\x3f\xe0\xac\xd4\xd5\x0d\xe6\x2c\x0d\x8e\xc5\x50\x0a\x0e\x2d\xbe\xe5\xf1\x6f\x87\xb0\xd7\x15\x4c\x89\x37\xa9\x6b\x6d\x41\x54\xe1\xb6\xbd\x8a\xad\xec\xaa\xfa\x70\xab\xd5\x27\xde\xd8\xfb\x69\x40\x0d\xe7\xea\x45\x92\x02\x83\xb6\x10\xdd\x52\xa6\x2d\x95\x1f\xb2\x1a\x18\x70\x9b\x92\x9f\xd3\x8b\xdc\x2c\x43\x46\x8f\x2a\xa9\xdf\x01\x70\x05\x1b\xce\x97\x05\x9c\xf1\x71\x05\x29\x9d\x6a\x2b\x05\x36\xbb\xc8\x3a\xa9\x3c\x67\x17\x67\x21\x67\x3a\x8c\x22\xfc\x85\x78\x20\xc1\x3c\xb1\xc4\x7e\x6b\x81\xbd\xe4\x15\xbd\xd9\x57\x1c\x59\xe3\x0d\x08\xef\xd7\x78\xfd\x21\x66\xa4\xe8\xfe\xa0\xf7\x2d\x31\x1d\xc2\x5e\x09\x6e\x45\x0e\x8a\x26\x2c\x7a\x3f\xe9\x2f\xfc\xe8\xbf\xaf\x83\x8c\xb0\x97\xc2\xc8\x3b\x92\xd1\x3f\xca\x38\xa3\x3b\x3d\xf6\xa0\xf7\xca\xe8\x8c\xc0\xc1\x8d\x02\x0a\x3f\x77\xf3\xe8\xca\x01\x1c\x2e\xd3\x32\xaa\x5f\x8e\x80\x7e\x09\xbd\x41\x0c\xfe\x10\x1b\xea\x53\xb4\x1d\x7b\xef\x3f\x4a\x9a\xdd\xe5\xbc\xfe\x4c\x1a\x52\x7a\x6c\x19\xd6\x86\x88\xe7\xd2\x01\xc7\xbd\xde\x8a\xff\xd4\x29\x93\x01\xe9\xe9\x72\xd4\xd3\x3b\x6c\x5a\x07\x14\x07\x06\x3e\xe0\xf1\x4f\xcf\x0e\x47\xbf\xcd\x8e\xb1\x80\xeb\xe7\xd1\x70\xf6\xdb\xe7\xd3\x83\xcf\xb3\x4f\x67\x93\xa3\x5f\x47\x87\x40\x4e\x6f\xbf\x7d\x81\xe8\xed\x1a\xd5\x74\x25\x9f\xd0\x6b\x2e\x64\x7f\x87\x5e\xd3\xa4\xe8\x93\x30\x85\x30\xe2\xb6\x78\x65\x9f\x1d\xb4\xe6\x20\xa2\xfe\x32\xbd\xdc\xe9\xe1\xab\xa1\xa3\xe9\x8c\x4c\x46\xc3\xd1\xd1\x97\xd1\x21\xcc\x98\xbc\x26\x3f\x4f\xcf\x4e\x7d\xce\xd0\x78\x7e\xc7\xd1\xbe\x6a\xe7\x2c\xc3\xae\x2c\xb0\x1f\xb1\x8c\xd5\x05\x65\x2c\xcd\x77\x38\xdf\xfb\x12\xc5\x59\xd6\x27\x51\x50\x04\x0e\x62\xf1\x03\x4a\x05\xe1\xb6\x40\xe8\xd3\x42\x68\x83\xda\xea\xcb\x86\xbb\xd9\x5b\x91\xa1\x8c\x44\x41\xbe\xb8\x48\x83\x2c\x72\x62\xaa\x20\xd7\x41\x9e\xdf\xa4\x1d\x00\x45\x0e\x1f\x96\x0c\xa7\xec\x73\xa6\x7c\xdd\x3f\xf7\xc5\x6b\x20\x1d\x46\xaa\x2e\xd8\x30\x71\x34\x97\x6f\x74\x5a\xa8\xea\x03\x6b\xb5\x83\xa8\xe3\x77\xfb\x3f\x55\x04\xfa\x4b\xf6\xba\xef\x3f\xe3\x9f\x48\xfc\xfa\x75\x0b\xe3\xf1\x83\x4b\x24\xfa\x7e\x8d\xab\xe9\xfc\x42\xef\xc8\x3b\x90\xe9\xc3\x8a\x91\xbd\x0e\x98\xf0\x53\x73\x1e\x26\x69\x60\x65\xd6\x7f\x2b\xa3\xf0\xa3\x07\x09\xde\xd6\xc6\x36\xfe\x30\xde\x34\xbc\x7f\x14\x7b\x9a\xee\x38\x97\x7a\xb1\x2a\x26\x8d\x85\x0c\x75\xe5\x51\x25\x73\xc0\x22\x07\xe6\xff\x6b\x46\x31\x01\x67\xb9\x69\xa7\x62\x95\x3f\x0b\x70\x12\x07\xcd\x52\xf7\xdb\xe0\x51\xe9\x0d\xc8\xdf\xfe\xf6\x63\x3b\x64\x50\x2c\x40\x8f\xed\x81\x63\x96\xef\xa1\x3a\x63\xfa\xcb\xc7\xc3\x83\xd7\xf0\xb8\x7e\x41\x45\x6a\x13\xcf\x58\x7b\x56\x26\xbd\xd6\x31\x80\xc3\x8b\x34\x82\x51\xc6\x67\xd3\x59\x3b\xf8\x82\x06\x11\xac\xcf\xa0\xdb\xda\xf6\x0e\xc2\x90\xae\x8b\x1e\xa0\x07\xa2\x97\x18\x88\x01\x57\xf7\x7e\xcf\xd3\x0e\x94\x31\x04\x58\x67\x00\xf3\xda\x45\xa7\x4a\x47\x73\xbb\x7b\x73\x73\xb3\x8b\x2a\x7a\xb7\xcc\x40\x92\xf1\xee\x88\xa8\x23\xde\xcf\x39\xcd\x76\x0f\x2e\x01\x35\x62\x05\x9f\x72\xb9\x67\x18\x44\xbd\xd3\xa6\x15\x75\x50\xb2\x05\xe3\xaf\x6c\x0e\x70\x55\x2a\xe9\xde\x2a\x9c\x0f\x52\x73\x28\x9d\xe0\x30\x80\x64\x32\x5f\xc6\x47\xe7\x01\xdc\xd2\x1d\x21\xb1\x92\x49\x02\xb7\xb6\xc3\x1e\x44\x7c\x17\x69\x74\x87\x46\xdb\xb4\xd9\x3a\xb4\x62\x73\xf1\xcd\xdd\x32\x1f\xf4\xfa\xf8\xca\x93\x9f\xb3\x5f\xe8\xe5\xb9\x4d\x96\x15\xcd\x27\x21\x53\x80\x47\xb3\xd7\x88\x56\x48\x9c\xc5\x6a\xeb\x48\x19\x11\xb4\x18\xa1\x20\x00\x82\x9d\x5e\x59\xcc\xff\x61\xf1\xa3\x6c\xfd\x80\x5d\x3d\x34\x43\x3d\x89\x7f\xe1\xa2\x4c\xae\x80\x83\x9c\x3d\xaf\xdf\x11\xf6\x80\x6c\xba\x63\x84\x98\x43\x46\xd8\x51\x23\xca\xcc\xc1\xa1\xdb\xc7\x13\xbd\xd0\x57\xf2\xa3\x34\xa1\x16\xaf\x53\x07\x6f\x99\x85\xa5\x79\x1b\x38\x08\x21\x9f\x70\x96\xa5\x59\x4f\x75\x8b\xd2\x36\x87\x47\x9f\x73\x6f\x84\x9d\x50\x1c\x78\xef\x2e\xd2\xc4\xa6\x3e\x0f\xe2\xe5\x4e\x87\x3e\x0f\x9c\x1c\xf3\x57\x40\xc9\x1f\x82\x7c\xc0\x2e\x91\x9c\x74\x49\x54\x5b\x66\x08\x3a\x81\xbd\x74\xd2\x83\x20\x96\x6b\x6a\xf1\xe0\x99\x17\xe1\x06\x82\x63\xba\x53\x51\xbb\x9d\x0d\x08\x0f\x12\xba\x45\x58\xac\x36\xd5\x42\x15\x68\x30\xe9\x81\xfa\x8e\xb8\xe5\xc0\x4e\x3b\x46\x17\xf9\xb0\x96\x70\x1b\xc3\xde\xe9\x02\x6c\xa7\x88\x7b\x27\xa5\x72\xf9\x84\x76\xc6\x87\x2c\xce\x07\x03\x06\xd4\x1a\x72\x4b\xa1\xb6\x7f\x9c\x26\x97\x55\x64\x9d\x87\x0b\x1a\x95\xea\xfd\x15\x53\xf1\x6c\x74\xbb\xc6\x63\x65\x71\x34\xc8\x88\x13\x2d\x5a\xe1\x01\x3f\xf0\x30\xb2\x62\x2c\xaa\xb6\x47\xe0\x72\x5e\xc1\x55\x12\x7a\x14\x59\x08\x16\x67\x2b\xda\xf1\xcc\x5a\x1c\x50\x7c\xc3\xab\x0d\xbf\xc1\xd7\x6f\x9e\x48\x21\x88\x6e\xdf\x60\x94\x6f\x55\x70\xd7\x00\x88\xec\x58\x0d\x20\x04\xb6\x01\x10\xef\x51\x31\x00\xe9\xa0\xc4\x96\x89\xb1\xac\x1f\xcf\x8c\x8c\x69\xb6\x8a\xf3\xdc\x96\x42\x21\x7a\x0e\x45\x82\xb5\x2d\x29\x51\xd6\x54\xdc\x18\x81\x48\xf8\x4d\x06\x83\x23\x30\xca\x57\xd4\x76\x6b\x83\x92\x72\x21\x8f\x5c\x14\xe9\x7a\x10\x1c\x94\x6d\xf2\x5c\xbb\x10\x44\x96\x23\x96\x71\x62\x68\x9c\x35\x44\x86\xb8\x4b\x03\x3f\x3c\xdb\x65\xbd\xd9\x91\xbf\x04\xcc\xef\x92\xf8\x14\xe4\xa3\xa1\x7c\xc1\x10\x23\xea\x2c\x53\x32\xd8\xdb\xae\x69\x54\xef\xa5\x00\x62\xcb\x7c\x97\x06\x79\xc1\xde\x15\x97\x4f\x4b\x1f\x88\xe3\x06\xf4\xc0\xee\xdb\x27\xe0\xa0\x25\xc7\xc1\xe8\x10\x28\x50\x4a\x9d\xef\x32\xdb\x2e\x4e\x68\x58\x85\x2d\x96\xab\xd0\x2c\x75\xe4\x13\x09\x4c\xec\x03\xa5\xa4\x40\x61\xbc\x00\xb0\xd6\x99\xdb\x75\xd7\xd3\xeb\xcb\xa5\x2b\xdd\x9a\xe2\x6e\x57\xd5\xcd\x77\x95\xc4\xb5\xf3\x4d\x7b\x93\xbd\xe2\x1a\x3f\x6c\xea\xca\x08\xe3\x65\x77\x46\x11\xc4\x14\x58\xdd\x0e\xa8\x2a\x5a\x5a\x96\xe5\x21\x03\xe9\xec\xb3\xe0\xed\x1b\x4c\x13\xfb\xd1\xc9\x15\xed\x46\x0d\xa5\x12\xdd\xfe\xda\xbd\x7e\x75\x92\x63\xf9\x3b\x5d\x99\xe4\xbc\x09\x49\xbb\x8b\xa6\xb9\x96\x48\x79\x4e\x8c\x4b\x8a\x94\x66\xed\x14\xa6\xe5\x1e\x25\xf5\x0e\x25\x7d\x1c\xe9\x46\x25\xad\x09\xb3\x85\xa1\xae\x4d\x35\x18\xf7\xfb\x31\x8e\x02\x23\xeb\x05\x45\x95\x5e\x6d\x2c\x8c\x71\xb3\x92\xfd\x68\x4f\x31\xee\xea\xe9\x8c\xbc\xde\x7d\x13\xcc\x7d\xd1\xd5\xf3\xdf\x61\xe5\x5c\x64\xd6\x4a\x79\x69\x14\x5e\x5e\x79\x51\x97\x46\x1d\x8a\xcc\xe7\x0f\xd6\x83\x3a\x57\x1f\xae\x09\x68\x56\x9d\xc8\xe5\x58\x72\x66\x2d\xb2\x6a\xc7\x36\xd1\x71\xfd\x2b\x2e\x16\x1d\x70\x85\x6f\x5b\x89\x07\x90\x03\x08\xda\xd3\x2c\xfe\x93\x5a\xcb\x06\x8d\x5e\xb6\x63\x47\xe9\x3e\x2a\x2b\x5f\x7f\xb0\xa0\xd1\x9e\xa8\x07\xba\xe7\x56\xe9\x95\x4d\x57\x8b\x22\x96\x2f\xe9\x31\xef\xbe\x51\x95\xcd\xf4\xc7\xc1\x40\x5c\x43\x25\xb4\xcd\x21\x5d\x52\x94\x93\xfa\xc4\x11\x66\x88\xaf\x7b\xb4\x68\x23\x76\x6d\x2c\x66\x6c\x32\x5e\x01\xa1\x97\x94\x81\x2f\xac\xbd\x78\x78\x5f\x5d\xe9\xe0\xe5\x10\x52\xd1\x15\x2a\xd7\xfa\xdc\x57\xdc\x7c\x45\x54\xab\x2f\xe0\xf1\x92\xc2\xbe\xd3\x46\xc8\x56\xcb\xc6\x36\x89\x6b\xff\x1b\x00\x00\xff\xff\x1e\x2a\x65\xb3\xfb\x5b\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

